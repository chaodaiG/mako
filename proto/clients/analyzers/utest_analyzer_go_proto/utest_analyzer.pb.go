// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/clients/analyzers/utest_analyzer.proto

package mako_utest_analyzer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	mako_go_proto "github.com/google/mako/spec/proto/mako_go_proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UTestConfig_DirectionBias int32

const (
	UTestConfig_NO_BIAS         UTestConfig_DirectionBias = 0
	UTestConfig_IGNORE_INCREASE UTestConfig_DirectionBias = 1
	UTestConfig_IGNORE_DECREASE UTestConfig_DirectionBias = 2
)

var UTestConfig_DirectionBias_name = map[int32]string{
	0: "NO_BIAS",
	1: "IGNORE_INCREASE",
	2: "IGNORE_DECREASE",
}

var UTestConfig_DirectionBias_value = map[string]int32{
	"NO_BIAS":         0,
	"IGNORE_INCREASE": 1,
	"IGNORE_DECREASE": 2,
}

func (x UTestConfig_DirectionBias) Enum() *UTestConfig_DirectionBias {
	p := new(UTestConfig_DirectionBias)
	*p = x
	return p
}

func (x UTestConfig_DirectionBias) String() string {
	return proto.EnumName(UTestConfig_DirectionBias_name, int32(x))
}

func (x *UTestConfig_DirectionBias) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UTestConfig_DirectionBias_value, data, "UTestConfig_DirectionBias")
	if err != nil {
		return err
	}
	*x = UTestConfig_DirectionBias(value)
	return nil
}

func (UTestConfig_DirectionBias) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_bd31dc28658c9745, []int{1, 0}
}

type UTestAnalyzerInput struct {
	ASample              *UTestSample   `protobuf:"bytes,1,opt,name=a_sample,json=aSample" json:"a_sample,omitempty"`
	BSample              *UTestSample   `protobuf:"bytes,2,opt,name=b_sample,json=bSample" json:"b_sample,omitempty"`
	ConfigList           []*UTestConfig `protobuf:"bytes,3,rep,name=config_list,json=configList" json:"config_list,omitempty"`
	Name                 *string        `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UTestAnalyzerInput) Reset()         { *m = UTestAnalyzerInput{} }
func (m *UTestAnalyzerInput) String() string { return proto.CompactTextString(m) }
func (*UTestAnalyzerInput) ProtoMessage()    {}
func (*UTestAnalyzerInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd31dc28658c9745, []int{0}
}

func (m *UTestAnalyzerInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UTestAnalyzerInput.Unmarshal(m, b)
}
func (m *UTestAnalyzerInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UTestAnalyzerInput.Marshal(b, m, deterministic)
}
func (m *UTestAnalyzerInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UTestAnalyzerInput.Merge(m, src)
}
func (m *UTestAnalyzerInput) XXX_Size() int {
	return xxx_messageInfo_UTestAnalyzerInput.Size(m)
}
func (m *UTestAnalyzerInput) XXX_DiscardUnknown() {
	xxx_messageInfo_UTestAnalyzerInput.DiscardUnknown(m)
}

var xxx_messageInfo_UTestAnalyzerInput proto.InternalMessageInfo

func (m *UTestAnalyzerInput) GetASample() *UTestSample {
	if m != nil {
		return m.ASample
	}
	return nil
}

func (m *UTestAnalyzerInput) GetBSample() *UTestSample {
	if m != nil {
		return m.BSample
	}
	return nil
}

func (m *UTestAnalyzerInput) GetConfigList() []*UTestConfig {
	if m != nil {
		return m.ConfigList
	}
	return nil
}

func (m *UTestAnalyzerInput) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type UTestConfig struct {
	AMetricKey           *string                    `protobuf:"bytes,1,opt,name=a_metric_key,json=aMetricKey" json:"a_metric_key,omitempty"`
	ADataFilter          *mako_go_proto.DataFilter  `protobuf:"bytes,8,opt,name=a_data_filter,json=aDataFilter" json:"a_data_filter,omitempty"`
	BMetricKey           *string                    `protobuf:"bytes,2,opt,name=b_metric_key,json=bMetricKey" json:"b_metric_key,omitempty"`
	BDataFilter          *mako_go_proto.DataFilter  `protobuf:"bytes,9,opt,name=b_data_filter,json=bDataFilter" json:"b_data_filter,omitempty"`
	ShiftValue           *float64                   `protobuf:"fixed64,3,opt,name=shift_value,json=shiftValue" json:"shift_value,omitempty"`
	RelativeShiftValue   *float64                   `protobuf:"fixed64,7,opt,name=relative_shift_value,json=relativeShiftValue" json:"relative_shift_value,omitempty"`
	DirectionBias        *UTestConfig_DirectionBias `protobuf:"varint,4,opt,name=direction_bias,json=directionBias,enum=mako.utest_analyzer.UTestConfig_DirectionBias,def=0" json:"direction_bias,omitempty"`
	SignificanceLevel    *float64                   `protobuf:"fixed64,5,opt,name=significance_level,json=significanceLevel" json:"significance_level,omitempty"`
	ConfigName           *string                    `protobuf:"bytes,6,opt,name=config_name,json=configName" json:"config_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *UTestConfig) Reset()         { *m = UTestConfig{} }
func (m *UTestConfig) String() string { return proto.CompactTextString(m) }
func (*UTestConfig) ProtoMessage()    {}
func (*UTestConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd31dc28658c9745, []int{1}
}

func (m *UTestConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UTestConfig.Unmarshal(m, b)
}
func (m *UTestConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UTestConfig.Marshal(b, m, deterministic)
}
func (m *UTestConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UTestConfig.Merge(m, src)
}
func (m *UTestConfig) XXX_Size() int {
	return xxx_messageInfo_UTestConfig.Size(m)
}
func (m *UTestConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_UTestConfig.DiscardUnknown(m)
}

var xxx_messageInfo_UTestConfig proto.InternalMessageInfo

const Default_UTestConfig_DirectionBias UTestConfig_DirectionBias = UTestConfig_NO_BIAS

func (m *UTestConfig) GetAMetricKey() string {
	if m != nil && m.AMetricKey != nil {
		return *m.AMetricKey
	}
	return ""
}

func (m *UTestConfig) GetADataFilter() *mako_go_proto.DataFilter {
	if m != nil {
		return m.ADataFilter
	}
	return nil
}

func (m *UTestConfig) GetBMetricKey() string {
	if m != nil && m.BMetricKey != nil {
		return *m.BMetricKey
	}
	return ""
}

func (m *UTestConfig) GetBDataFilter() *mako_go_proto.DataFilter {
	if m != nil {
		return m.BDataFilter
	}
	return nil
}

func (m *UTestConfig) GetShiftValue() float64 {
	if m != nil && m.ShiftValue != nil {
		return *m.ShiftValue
	}
	return 0
}

func (m *UTestConfig) GetRelativeShiftValue() float64 {
	if m != nil && m.RelativeShiftValue != nil {
		return *m.RelativeShiftValue
	}
	return 0
}

func (m *UTestConfig) GetDirectionBias() UTestConfig_DirectionBias {
	if m != nil && m.DirectionBias != nil {
		return *m.DirectionBias
	}
	return Default_UTestConfig_DirectionBias
}

func (m *UTestConfig) GetSignificanceLevel() float64 {
	if m != nil && m.SignificanceLevel != nil {
		return *m.SignificanceLevel
	}
	return 0
}

func (m *UTestConfig) GetConfigName() string {
	if m != nil && m.ConfigName != nil {
		return *m.ConfigName
	}
	return ""
}

type UTestSample struct {
	RunQueryList         []*mako_go_proto.RunInfoQuery `protobuf:"bytes,1,rep,name=run_query_list,json=runQueryList" json:"run_query_list,omitempty"`
	IncludeCurrentRun    *bool                         `protobuf:"varint,2,opt,name=include_current_run,json=includeCurrentRun,def=0" json:"include_current_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *UTestSample) Reset()         { *m = UTestSample{} }
func (m *UTestSample) String() string { return proto.CompactTextString(m) }
func (*UTestSample) ProtoMessage()    {}
func (*UTestSample) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd31dc28658c9745, []int{2}
}

func (m *UTestSample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UTestSample.Unmarshal(m, b)
}
func (m *UTestSample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UTestSample.Marshal(b, m, deterministic)
}
func (m *UTestSample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UTestSample.Merge(m, src)
}
func (m *UTestSample) XXX_Size() int {
	return xxx_messageInfo_UTestSample.Size(m)
}
func (m *UTestSample) XXX_DiscardUnknown() {
	xxx_messageInfo_UTestSample.DiscardUnknown(m)
}

var xxx_messageInfo_UTestSample proto.InternalMessageInfo

const Default_UTestSample_IncludeCurrentRun bool = false

func (m *UTestSample) GetRunQueryList() []*mako_go_proto.RunInfoQuery {
	if m != nil {
		return m.RunQueryList
	}
	return nil
}

func (m *UTestSample) GetIncludeCurrentRun() bool {
	if m != nil && m.IncludeCurrentRun != nil {
		return *m.IncludeCurrentRun
	}
	return Default_UTestSample_IncludeCurrentRun
}

type UTestAnalyzerOutput struct {
	Summary              *string              `protobuf:"bytes,1,opt,name=summary" json:"summary,omitempty"`
	ConfigResultList     []*UTestConfigResult `protobuf:"bytes,2,rep,name=config_result_list,json=configResultList" json:"config_result_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UTestAnalyzerOutput) Reset()         { *m = UTestAnalyzerOutput{} }
func (m *UTestAnalyzerOutput) String() string { return proto.CompactTextString(m) }
func (*UTestAnalyzerOutput) ProtoMessage()    {}
func (*UTestAnalyzerOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd31dc28658c9745, []int{3}
}

func (m *UTestAnalyzerOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UTestAnalyzerOutput.Unmarshal(m, b)
}
func (m *UTestAnalyzerOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UTestAnalyzerOutput.Marshal(b, m, deterministic)
}
func (m *UTestAnalyzerOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UTestAnalyzerOutput.Merge(m, src)
}
func (m *UTestAnalyzerOutput) XXX_Size() int {
	return xxx_messageInfo_UTestAnalyzerOutput.Size(m)
}
func (m *UTestAnalyzerOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_UTestAnalyzerOutput.DiscardUnknown(m)
}

var xxx_messageInfo_UTestAnalyzerOutput proto.InternalMessageInfo

func (m *UTestAnalyzerOutput) GetSummary() string {
	if m != nil && m.Summary != nil {
		return *m.Summary
	}
	return ""
}

func (m *UTestAnalyzerOutput) GetConfigResultList() []*UTestConfigResult {
	if m != nil {
		return m.ConfigResultList
	}
	return nil
}

type UTestConfigResult struct {
	Config               *UTestConfig `protobuf:"bytes,5,opt,name=config" json:"config,omitempty"`
	AMetricLabel         *string      `protobuf:"bytes,6,opt,name=a_metric_label,json=aMetricLabel" json:"a_metric_label,omitempty"`
	BMetricLabel         *string      `protobuf:"bytes,7,opt,name=b_metric_label,json=bMetricLabel" json:"b_metric_label,omitempty"`
	AMedian              *float64     `protobuf:"fixed64,8,opt,name=a_median,json=aMedian" json:"a_median,omitempty"`
	BMedian              *float64     `protobuf:"fixed64,9,opt,name=b_median,json=bMedian" json:"b_median,omitempty"`
	ZStatistic           *float64     `protobuf:"fixed64,1,opt,name=z_statistic,json=zStatistic" json:"z_statistic,omitempty"`
	PValue               *float64     `protobuf:"fixed64,2,opt,name=p_value,json=pValue" json:"p_value,omitempty"`
	RegressionFound      *bool        `protobuf:"varint,3,opt,name=regression_found,json=regressionFound" json:"regression_found,omitempty"`
	ConfigName           *string      `protobuf:"bytes,4,opt,name=config_name,json=configName" json:"config_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UTestConfigResult) Reset()         { *m = UTestConfigResult{} }
func (m *UTestConfigResult) String() string { return proto.CompactTextString(m) }
func (*UTestConfigResult) ProtoMessage()    {}
func (*UTestConfigResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_bd31dc28658c9745, []int{4}
}

func (m *UTestConfigResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UTestConfigResult.Unmarshal(m, b)
}
func (m *UTestConfigResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UTestConfigResult.Marshal(b, m, deterministic)
}
func (m *UTestConfigResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UTestConfigResult.Merge(m, src)
}
func (m *UTestConfigResult) XXX_Size() int {
	return xxx_messageInfo_UTestConfigResult.Size(m)
}
func (m *UTestConfigResult) XXX_DiscardUnknown() {
	xxx_messageInfo_UTestConfigResult.DiscardUnknown(m)
}

var xxx_messageInfo_UTestConfigResult proto.InternalMessageInfo

func (m *UTestConfigResult) GetConfig() *UTestConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *UTestConfigResult) GetAMetricLabel() string {
	if m != nil && m.AMetricLabel != nil {
		return *m.AMetricLabel
	}
	return ""
}

func (m *UTestConfigResult) GetBMetricLabel() string {
	if m != nil && m.BMetricLabel != nil {
		return *m.BMetricLabel
	}
	return ""
}

func (m *UTestConfigResult) GetAMedian() float64 {
	if m != nil && m.AMedian != nil {
		return *m.AMedian
	}
	return 0
}

func (m *UTestConfigResult) GetBMedian() float64 {
	if m != nil && m.BMedian != nil {
		return *m.BMedian
	}
	return 0
}

func (m *UTestConfigResult) GetZStatistic() float64 {
	if m != nil && m.ZStatistic != nil {
		return *m.ZStatistic
	}
	return 0
}

func (m *UTestConfigResult) GetPValue() float64 {
	if m != nil && m.PValue != nil {
		return *m.PValue
	}
	return 0
}

func (m *UTestConfigResult) GetRegressionFound() bool {
	if m != nil && m.RegressionFound != nil {
		return *m.RegressionFound
	}
	return false
}

func (m *UTestConfigResult) GetConfigName() string {
	if m != nil && m.ConfigName != nil {
		return *m.ConfigName
	}
	return ""
}

func init() {
	proto.RegisterEnum("mako.utest_analyzer.UTestConfig_DirectionBias", UTestConfig_DirectionBias_name, UTestConfig_DirectionBias_value)
	proto.RegisterType((*UTestAnalyzerInput)(nil), "mako.utest_analyzer.UTestAnalyzerInput")
	proto.RegisterType((*UTestConfig)(nil), "mako.utest_analyzer.UTestConfig")
	proto.RegisterType((*UTestSample)(nil), "mako.utest_analyzer.UTestSample")
	proto.RegisterType((*UTestAnalyzerOutput)(nil), "mako.utest_analyzer.UTestAnalyzerOutput")
	proto.RegisterType((*UTestConfigResult)(nil), "mako.utest_analyzer.UTestConfigResult")
}

func init() {
	proto.RegisterFile("proto/clients/analyzers/utest_analyzer.proto", fileDescriptor_bd31dc28658c9745)
}

var fileDescriptor_bd31dc28658c9745 = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x5d, 0x4f, 0x23, 0x37,
	0x14, 0xed, 0x84, 0x40, 0x92, 0x1b, 0x08, 0xc1, 0x69, 0xd5, 0xb4, 0x2f, 0x44, 0x51, 0x55, 0x51,
	0xa9, 0x9d, 0x54, 0xa8, 0x48, 0x88, 0x3e, 0x25, 0x10, 0xaa, 0x08, 0x08, 0xad, 0x43, 0xfb, 0x58,
	0xcb, 0x33, 0xf1, 0x64, 0x2d, 0x66, 0x3c, 0x59, 0xdb, 0x83, 0x14, 0x1e, 0xf6, 0x6d, 0xa5, 0xfd,
	0x83, 0xfb, 0x13, 0xf6, 0x7f, 0xac, 0x6c, 0xcf, 0xc0, 0x84, 0xfd, 0x80, 0x37, 0xfb, 0x9c, 0x73,
	0xef, 0x78, 0xee, 0xbd, 0xe7, 0xc2, 0xaf, 0x4b, 0x99, 0xea, 0x74, 0x10, 0xc6, 0x9c, 0x09, 0xad,
	0x06, 0x54, 0xd0, 0x78, 0x75, 0xcf, 0xa4, 0x1a, 0x64, 0x9a, 0x29, 0x4d, 0x8a, 0xbb, 0x6f, 0x65,
	0xa8, 0x93, 0xd0, 0xdb, 0xd4, 0x5f, 0xa7, 0x7e, 0xfc, 0x4e, 0x2d, 0x59, 0x38, 0x70, 0x79, 0x2c,
	0x6f, 0x8f, 0xfd, 0x0f, 0x1e, 0xa0, 0x7f, 0x6f, 0x98, 0xd2, 0xc3, 0x5c, 0x38, 0x11, 0xcb, 0x4c,
	0xa3, 0x3f, 0xa1, 0x4e, 0x89, 0xa2, 0xc9, 0x32, 0x66, 0x5d, 0xaf, 0xe7, 0x1d, 0x34, 0x0f, 0x7b,
	0xfe, 0x67, 0xb2, 0xfa, 0x36, 0x74, 0x66, 0x75, 0xb8, 0x46, 0xdd, 0xc1, 0x04, 0x07, 0x45, 0x70,
	0xe5, 0xa5, 0xc1, 0x41, 0x1e, 0x3c, 0x84, 0x66, 0x98, 0x8a, 0x88, 0x2f, 0x48, 0xcc, 0x95, 0xee,
	0x6e, 0xf4, 0x36, 0xbe, 0x1e, 0x7f, 0x6a, 0xc5, 0x18, 0x5c, 0xd0, 0x25, 0x57, 0x1a, 0x21, 0xa8,
	0x0a, 0x9a, 0xb0, 0x6e, 0xb5, 0xe7, 0x1d, 0x34, 0xb0, 0x3d, 0xf7, 0xdf, 0x55, 0xa1, 0x59, 0xd2,
	0xa3, 0x1e, 0x6c, 0x53, 0x92, 0x30, 0x2d, 0x79, 0x48, 0x6e, 0xd9, 0xca, 0xfe, 0x64, 0x03, 0x03,
	0xbd, 0xb2, 0xd0, 0x05, 0x5b, 0xa1, 0x3f, 0x60, 0x87, 0x92, 0x39, 0xd5, 0x94, 0x44, 0x3c, 0xd6,
	0x4c, 0x76, 0xeb, 0xf6, 0x57, 0xda, 0xee, 0x29, 0x67, 0x54, 0xd3, 0x73, 0x8b, 0xe3, 0x26, 0x7d,
	0xbc, 0x98, 0xbc, 0x41, 0x39, 0x6f, 0xc5, 0xe5, 0x0d, 0xd6, 0xf2, 0x06, 0x6b, 0x79, 0x1b, 0x5f,
	0xca, 0x1b, 0x94, 0xf2, 0xee, 0x43, 0x53, 0xbd, 0xe2, 0x91, 0x26, 0x77, 0x34, 0xce, 0x58, 0x77,
	0xa3, 0xe7, 0x1d, 0x78, 0x18, 0x2c, 0xf4, 0x9f, 0x41, 0xd0, 0xef, 0xf0, 0xad, 0x64, 0x31, 0xd5,
	0xfc, 0x8e, 0x91, 0xb2, 0xb2, 0x66, 0x95, 0xa8, 0xe0, 0x66, 0x8f, 0x11, 0xff, 0x43, 0x6b, 0xce,
	0x25, 0x0b, 0x35, 0x4f, 0x05, 0x09, 0x38, 0x55, 0xb6, 0x60, 0xad, 0x43, 0xff, 0xb9, 0x62, 0xfb,
	0x67, 0x45, 0xd8, 0x88, 0x53, 0x75, 0x52, 0x9b, 0x5e, 0x93, 0xd1, 0x64, 0x38, 0xc3, 0x3b, 0xf3,
	0x32, 0x8e, 0x7e, 0x03, 0xa4, 0xf8, 0x42, 0xf0, 0x88, 0x87, 0x54, 0x84, 0x8c, 0xc4, 0xec, 0x8e,
	0xc5, 0xdd, 0x4d, 0xfb, 0x9e, 0xbd, 0x32, 0x73, 0x69, 0x08, 0xf3, 0x87, 0x79, 0xe3, 0x6d, 0xf3,
	0xb6, 0x5c, 0xe1, 0x1c, 0x34, 0x35, 0x2d, 0x3c, 0x87, 0x9d, 0xb5, 0x0f, 0xa3, 0x26, 0x14, 0x9f,
	0x6e, 0x7f, 0x83, 0x3a, 0xb0, 0x3b, 0xf9, 0x6b, 0x7a, 0x8d, 0xc7, 0x64, 0x32, 0x3d, 0xc5, 0xe3,
	0xe1, 0x6c, 0xdc, 0xf6, 0x4a, 0xe0, 0xd9, 0x38, 0x07, 0x2b, 0xfd, 0x37, 0xf9, 0x24, 0xe4, 0x03,
	0x77, 0x0c, 0x2d, 0x99, 0x09, 0xf2, 0x3a, 0x63, 0x72, 0xe5, 0x66, 0xce, 0xb3, 0x33, 0x87, 0x5c,
	0x19, 0x70, 0x26, 0x26, 0x22, 0x4a, 0xff, 0x31, 0x34, 0xde, 0x96, 0x99, 0xb0, 0x27, 0x3b, 0x67,
	0x47, 0xd0, 0xe1, 0x22, 0x8c, 0xb3, 0x39, 0x23, 0x61, 0x26, 0x25, 0x13, 0x9a, 0xc8, 0x4c, 0xd8,
	0x96, 0xd7, 0x4f, 0x36, 0x23, 0x1a, 0x2b, 0x86, 0xf7, 0x72, 0xc5, 0xa9, 0x13, 0xe0, 0x4c, 0xf4,
	0xdf, 0x7a, 0xd0, 0x59, 0xb3, 0xdc, 0x75, 0xa6, 0x8d, 0xe7, 0xba, 0x50, 0x53, 0x59, 0x92, 0x50,
	0x59, 0x4c, 0x63, 0x71, 0x45, 0x37, 0x80, 0xf2, 0xd2, 0x48, 0xa6, 0xb2, 0x58, 0xbb, 0x67, 0x56,
	0xec, 0x33, 0x7f, 0x7e, 0xd6, 0x1a, 0x36, 0x04, 0xb7, 0xc3, 0xd2, 0xcd, 0x3c, 0xbf, 0xff, 0xbe,
	0x02, 0x7b, 0x9f, 0xe8, 0xd0, 0x31, 0x6c, 0x39, 0xa5, 0xed, 0xd4, 0x4b, 0xac, 0x97, 0xeb, 0xd1,
	0x4f, 0xd0, 0x7a, 0xb0, 0x54, 0x4c, 0x03, 0x16, 0xe7, 0x3d, 0xdc, 0xce, 0x4d, 0x75, 0x69, 0x30,
	0xa3, 0x0a, 0xd6, 0x55, 0x35, 0xa7, 0x0a, 0xca, 0xaa, 0x1f, 0xcc, 0xfe, 0x49, 0xd8, 0x9c, 0x53,
	0x61, 0x7d, 0xe7, 0xe1, 0x1a, 0xbd, 0xb2, 0x57, 0x43, 0x05, 0x05, 0xd5, 0x70, 0x54, 0x90, 0x53,
	0xfb, 0xd0, 0xbc, 0x27, 0x4a, 0x53, 0xcd, 0x95, 0xe6, 0xa1, 0xad, 0xa2, 0x87, 0xe1, 0x7e, 0x56,
	0x20, 0xe8, 0x7b, 0xa8, 0x2d, 0x73, 0x5f, 0x54, 0x2c, 0xb9, 0xb5, 0x74, 0x5e, 0xf8, 0x05, 0xda,
	0x92, 0x2d, 0x24, 0x53, 0xca, 0x98, 0x21, 0x4a, 0x33, 0x31, 0xb7, 0x1e, 0xab, 0xe3, 0xdd, 0x47,
	0xfc, 0xdc, 0xc0, 0x4f, 0xe7, 0xb4, 0xfa, 0x74, 0x4e, 0x47, 0x17, 0x70, 0x14, 0xa6, 0x89, 0xbf,
	0x48, 0xd3, 0x45, 0xcc, 0x7c, 0x53, 0x37, 0x2e, 0x16, 0xfe, 0x92, 0xc9, 0x28, 0x95, 0x89, 0x99,
	0x77, 0x57, 0xd1, 0x7c, 0x99, 0xfb, 0x0f, 0xcb, 0x7c, 0xb4, 0xbe, 0x88, 0xff, 0x36, 0xfb, 0xf9,
	0x63, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x2c, 0x59, 0xe4, 0xfa, 0x05, 0x00, 0x00,
}
